*****
Latex
*****

图片排版
========

需要在导言区导入以下宏包：

.. code-block:: latex

    \usepackage{graphicx, subfigure, float, caption}


一般的图片插入格式为

.. code-block:: latex

	\begin{figure}[H]
	\centering
	\includegraphics[scale=0.2]{图片名字}
	\caption{图例信息}
	\label{fig:引用标签}
	\end{figure}

其中图片放置位置的选项有[htbp]或[H]，各选项的含义为

- :code:`h` ：当前位置。将图形放置在正文文本中给出该图形环境的地方。如果本页所剩的页面不够，这一参数将不起作用。
- :code:`t` ：顶部。将图形放置在页面的顶部。
- :code:`b` ：底部。将图形放置在页面的底部。
- :code:`p` ：浮动页。将图形放置在一只允许有浮动对象的页面上。
- :code:`H` ：float宏包下设置为当前位置，若放不下需要手工调整。


并排插入图片
------------

借助minipage来实现并排插入多张图片。下面是一个并排插入两张图片示例：

.. code-block:: latex

	\begin{figure}[H]
	\centering
	\begin{minipage}{0.45\linewidth}
	    \centering
	    \includegraphics[width=0.9\linewidth]{1}
	    \caption{1}
	    \label{fig:1}
	\end{minipage}
	\begin{minipage}{0.45\linewidth}
	    \centering
	    \includegraphics[width=0.9\linewidth]{2}
	    \caption{2}
	    \label{fig:2}
	\end{minipage}
	\end{figure}

如果希望插入更多张图片，只需要调整minipage的宽度，让一行能够放下对应的minipage数量即可。同时，可以在minipage之间添加 :code:`\\quad` 来使图片之间拉开一定间距。

如果需要插入多行图片，则是需要让两行minipage之间空出一行来换行即可。


并排插入子图片
--------------

如果需要插入多张子图片并显示为一横排，使用 :code:`\\subfigure` 和minipage来实现。下面是一个示例：

.. code-block:: latex

	\begin{figure}[H]
	\centering
	\subfigure{
	\begin{minipage}[b]{0.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{图片名1}
	\end{minipage}
	}
	\subfigure{
	\begin{minipage}[b]{0.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{图片名2}
	\end{minipage}
	}
	\subfigure{
	\begin{minipage}[b]{0.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{图片名3}
	\end{minipage}
	}
	\caption{figure title}
	\label{fig:main}
	\end{figure}


如果需要为每张图片添加单独的序号，则只需要在 :code:`\\subfigure` 后加一对方括号[]即可。如果需要进一步为每张图片添加单独的描述信息，则在 :code:`\\subfigure` 后的那一对方括号[]内填写描述信息即可。


多行多列排版子图片
------------------

与并排插入图片类似，简单地叠加 :code:`\\subfigure` 即可，通过控制minipage的宽度来控制一行插入的图片数量，空行来实现换行（或者由minipage宽度限制来自动换行）。

如果要实现子图片分组共用一个子标题，那么可以在同一个 :code:`\\subfigure` 内放入多个minipage。下面是一个示例：

.. code-block:: latex

	\begin{figure}[H]
	\centering
	\subfigure[figure 1]{
	\begin{minipage}[b]{.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{girl.eps}
	\end{minipage}
	\begin{minipage}[b]{.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{girl.eps}
	\end{minipage}
	\begin{minipage}[b]{.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{girl.eps}
	\end{minipage}
	}
	\subfigure[figure 2]{
	\begin{minipage}[b]{.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{girl.eps}
	\end{minipage}
	\begin{minipage}[b]{.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{girl.eps}
	\end{minipage}
	\begin{minipage}[b]{.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{girl.eps}
	\end{minipage}
	}
	\caption{figure title}
	\end{figure}


如果想实现竖排的分组，那么可以通过对 :code:`\\includegraphics` 进行换行 :code:`\\\\` 操作来实现。下面是一个示例：

.. code-block:: latex

	\begin{figure}[H]
	\centering
	\subfigure[figure 1]{
	\begin{minipage}[b]{.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{girl.eps} \\
	    \includegraphics[scale=0.1]{girl.eps}
	\end{minipage}
	}
	\subfigure[figure 2]{
	\begin{minipage}[b]{.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{girl.eps} \\
	    \includegraphics[scale=0.1]{girl.eps}
	\end{minipage}
	}
	\subfigure[figure 3]{
	\begin{minipage}[b]{.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{girl.eps} \\
	    \includegraphics[scale=0.1]{girl.eps}
	\end{minipage}
	}
	\caption{figure title}
	\end{figure}


除了上述方法，还可以使用 :code:`subcaption` 宏包来处理，下面是使用该宏包来实现的示例：

.. code-block:: latex

	\begin{figure}
	  \centering
	  \subcaptionbox{分图 A\label{fig:subfig-a}}
	    {\includegraphics[width=0.35\linewidth]{example-image-a.pdf}}
	  \subcaptionbox{分图 B\label{fig:subfig-b}}
	    {\includegraphics[width=0.35\linewidth]{example-image-b.pdf}}
	  \caption{多个分图的示例}
	  \label{fig:multi-image}
	\end{figure}





跨栏放置图片
------------

在文章排版为双栏时，如果需要跨栏放置图片，只需要在 :code:`\\begin{figure}` 和 :code:`\\end{figure}` 上带星号 :code:`*` 即可。


图片标题设置
-------------

如果模板生成出来的图片标题格式为 :code:`Figure. 1` 而需要的格式为 :code:`Fig. 1` ，那么在导言区引入宏包 :code:`\\usepackage{caption}` ，然后在 :code:`\\begin{document}` 后面加上以下语句：

.. code-block:: latex

    \captionsetup[figure]{labelfont={bf}, name={Fig.}, labelsep=period}



表格排版
========

表格标题设置
-------------

如果模板生成出来的图片标题格式为 :code:`Tab. 1` 而需要的格式为 :code:`Table 1` ，那么在导言区引入宏包 :code:`\\usepackage{caption}` ，然后在 :code:`\begin{document}` 后面加上以下语句：

.. code-block:: latex

    \captionsetup[table]{labelfont={bf}, name={Table}, labelsep=period}


三线表
--------

三条线可以使用 :code:`booktabs` 宏包提供的命令生成。下面是一个示例

.. code-block:: latex

	\begin{table}
	  \centering
	  \caption{三线表示例}
	  \begin{tabular}{ll}
	    \toprule
	    文件名          & 描述                         \\
	    \midrule
	    thuthesis.dtx   & 模板的源文件，包括文档和注释 \\
	    thuthesis.cls   & 模板文件                     \\
	    thuthesis-*.bst & BibTeX 参考文献表样式文件    \\
	    \bottomrule
	  \end{tabular}
	  \label{tab:three-line}
	\end{table}


表格如果有附注，尤其是需要在表格中进行标注时，可以使用 :code:`threeparttable` 宏包。研究生要求使用英文小写字母 a、b、c……顺序编号，本科生使用圈码 ①、②、③……编号，标注的编码需要自己手动填写并对应。下面是一个示例

.. code-block:: latex

	\begin{table}
	  \centering
	  \begin{threeparttable}[c]
	    \caption{带附注的表格示例}
	    \label{tab:three-part-table}
	    \begin{tabular}{ll}
	      \toprule
	      文件名                 & 描述                         \\
	      \midrule
	      thuthesis.dtx\tnote{a} & 模板的源文件，包括文档和注释 \\
	      thuthesis.cls\tnote{b} & 模板文件                     \\
	      thuthesis-*.bst        & BibTeX 参考文献表样式文件    \\
	      \bottomrule
	    \end{tabular}
	    \begin{tablenotes}
	      \item [a] 可以通过 xelatex 编译生成模板的使用说明文档；
	        使用 xetex 编译 \file{thuthesis.ins} 时则会从 \file{.dtx} 中去除掉文档和注释，得到精简的 \file{.cls} 文件。
	      \item [b] 更新模板时，一定要记得编译生成 \file{.cls} 文件，否则编译论文时载入的依然是旧版的模板。
	    \end{tablenotes}
	  \end{threeparttable}
	\end{table}


如某个表需要转页接排，可以使用 :code:`longtable` 宏包，需要在随后的各页上重复表的编号。编号后跟表题（可省略）和“（续）”，置于表上方。续表均应重复表头。下面是一个示例

.. code-block:: latex

	\begin{longtable}{cccc}
	    \caption{跨页长表格的表题} \\
	    \toprule
	    表头 1 & 表头 2 & 表头 3 & 表头 4 \\
	    \midrule
	  \endfirsthead
	    \caption[]{跨页长表格的表题（续）} \\
	    \toprule
	    表头 1 & 表头 2 & 表头 3 & 表头 4 \\
	    \midrule
	  \endhead
	    \bottomrule
	  \endfoot
	  Row 1  & & & \\
	  Row 2  & & & \\
	  Row 3  & & & \\
	  Row 4  & & & \\
	  Row 5  & & & \\
	  Row 6  & & & \\
	  Row 7  & & & \\
	  Row 8  & & & \\
	  Row 9  & & & \\
	  Row 10 & & & \\
	\end{longtable}




将Python的DataFrame打印为LaTeX三线表
-------------------------------------

下面的Python代码函数能够将DataFrame打印为一般的三线表。要求DataFrame包含columns且不含index。

.. code-block:: python

	def print_table(df):
	    rows = df.shape[0]
	    cols = df.shape[1]
	    header = '\\begin{table}[H]\n\\centering\n\\caption{1}\n\\begin{tabular}{%s}\n\\toprule' % ('c' * cols)
	    ender = '\\bottomrule\n\\end{tabular}\n\\end{table}'

	    print(header)
	    colsList = list(df.columns)
	    colHeader = ''
	    for i in range(0, cols):
	        if i == cols - 1:
	            colHeader += colsList[i] + ' \\\\'
	        else:
	            colHeader += colsList[i] + ' & '
	    print(colHeader + '\n' + '\\hline')
	    line = ''
	    for i in range(0, rows):
	        for j in range(0, cols):
	            if j == cols - 1 and i != rows - 1:
	                line += str(df.iloc[i, j]) + ' \\\\\n'
	            elif j == cols - 1 and i == rows - 1:
	                line += str(df.iloc[i, j]) + ' \\\\'
	            else:
	                line += str(df.iloc[i, j]) + ' & '
	    print(line)
	    print(ender)
	    return 0


算法环境
==========

算法环境（伪代码）可以使用 :code:`algorithms` 或者 :code:`algorithm2e` 宏包，使用方法参考 `用LaTeX优雅地书写伪代码 <https://zhuanlan.zhihu.com/p/166418214>`_  。下面是一个示例

.. code-block:: latex

	\begin{algorithm}
	\caption{Simulation-optimization heuristic}
	\label{algorithm}
	\KwData{current period $t$, initial inventory $I_{t-1}$, initial capital $B_{t-1}$, demand samples}
	\KwResult{Optimal order quantity $Q^{\ast}_{t}$}
	$r\leftarrow t$\;
	$\Delta B^{\ast}\leftarrow -\infty$\;
	\While{$\Delta B\leq \Delta B^{\ast}$ and $r\leq T$}{$Q\leftarrow\arg\max_{Q\geq 0}\Delta B^{Q}_{t,r}(I_{t-1},B_{t-1})$\;
	$\Delta B\leftarrow \Delta B^{Q}_{t,r}(I_{t-1},B_{t-1})/(r-t+1)$\;
	\If{$\Delta B\geq \Delta B^{\ast}$}{$Q^{\ast}\leftarrow Q$\;
	$\Delta B^{\ast}\leftarrow \Delta B$\;}
	$r\leftarrow r+1$\;}
	\end{algorithm}



代码环境
==========

可以借助 :code:`listings` 和 :code:`color` 来实现。更详细内容可以参考 `latex中lstlisting使用 <https://blog.csdn.net/qq_44885695/article/details/124258901>`_  先在导言区添加下面的设置：

.. code-block:: latex

	\usepackage{listings}
	\usepackage{color}

	\definecolor{dkgreen}{rgb}{0,0.6,0}
	\definecolor{gray}{rgb}{0.5,0.5,0.5}
	\definecolor{mauve}{rgb}{0.58,0,0.82}

	\lstset{frame=tb,
	  language=Python,
	  aboveskip=3mm,
	  belowskip=3mm,
	  showstringspaces=false,
	  columns=flexible,
	  basicstyle={\small\ttfamily},
	  numbers=none,
	  numberstyle=\tiny\color{gray},
	  keywordstyle=\color{blue},
	  commentstyle=\color{dkgreen},
	  stringstyle=\color{mauve},
	  breaklines=true,
	  breakatwhitespace=true,
	  tabsize=3
	}

之后在在正文里面的时候使用 :code:`lstlisting` 环境放置代码即可，下面是一个示例：

.. code-block:: latex

	\begin{lstlisting}
	import numpy as np
	if __name__ == '__main__':
		print(np.arange(10))
	\end{lstlisting}


对于Python代码，可以自行向项目里面添加 :code:`pythonhighlight.sty` 文件，在导言区导入 :code:`\usepackage{graphix}` 和 :code:`\usepackage{pythonhighlight}` ，就可以在正文里面通过下面的方式来插入Python代码：

.. code-block:: latex

	\begin{python}
	import numpy as np
	import pandas as pd
	print('now we can insert python into latex!')
	\end{python}

对于其他类型的代码，可以进行自定义设置，例如下面是VHDL代码的显示的示例：

.. code-block:: latex

	\usepackage{listings}
	\usepackage{color}

	\definecolor{dkgreen}{rgb}{0,0.6,0}
	\definecolor{gray}{rgb}{0.5,0.5,0.5}
	\definecolor{mauve}{rgb}{0.58,0,0.82}

	\lstset{frame=tb,
	  language=vhdl,
	  aboveskip=3mm,
	  belowskip=3mm,
	  showstringspaces=false,
	  columns=flexible,
	  basicstyle={\scriptsize\ttfamily},
	  numbers=left,
	  numberstyle=\tiny\color{gray},
	  keywordstyle=\color{blue},
	  commentstyle=\color{dkgreen},
	  stringstyle=\color{mauve},
	  breaklines=true,
	  breakatwhitespace=true,
	  tabsize=3,
	  emph={std_logic, std_logic_vector, rising_edge, falling_edge}, emphstyle=\color{purple}
	}

	\begin{lstlisting}
	library ieee;
	use ieee.std_logic_1164.all;
	use ieee.std_logic_unsigned.all;        -- for addition & counting
	use ieee.numeric_std.all;               -- for type conversions
	use ieee.math_real.all;                 -- for the ceiling and log constant calculation functions
	\end{lstlisting}



特殊物理单位
============

在导言区引入 :code:`\\usepackage{siunitx}` 。

“埃”：首先需要在导言区写入 :code:`\\DeclareSIUnit\angstrom{Å}` ，之后在正文处通过 :code:`\\si{\angstrom}` 来书写该单位。

“摄氏度”：在正文处通过 :code:`\\si{\degreeCelsius}` 来书写该单位。




特殊数学符号
=============

在导言区引入如下宏包：

.. code-block:: latex

    \usepackage{amsmath, amsthm, amssymb, bm, graphicx, hyperref, mathrsfs, fancyhdr, physics}

“闭曲面积分”：需要在导言区额外引入 :code:`\\usepackage{esint}` ，然后在正文处通过 :code:`\\varoiint` 来书写该符号。

“二重极限（多行下标）”：使用 :code:`\\substack` 来实现，例如 :code:`\\lim_{\substack{x \\to + \\infty \\\\ y \\to + \\infty}}` 。

“等号上下文字”：需要在导言区额外引入 :code:`\\usepackage{extpfeil}` 或 :code:`\\usepackage{extarrows}` ，之后通过 :code:`\\xlongequal[等号下文字]{等号上文字}` 的方式来书写。如果只是在普通等号的上面加少量符号，则可以使用 :code:`\\usepackage{amsmath}` 中的 :code:`\\overset{等号上符号}{=}` 来书写。

一些在字母上加特殊符号的方式是固定的，如下所示：

+-------------------+--------------------+------------------------+------------------------+
| 显示效果          | latex写法          | 显示效果               | latex写法              |
+===================+====================+========================+========================+
| :math:`\hat{a}`   | :code:`\\hat{a}`   | :math:`\\acute{a}`     | :code:`\\acute{a}`     |
+-------------------+--------------------+------------------------+------------------------+
| :math:`\grave{a}` | :code:`\\grave{a}` | :math:`\\breve{a}`     | :code:`\\breve{a}`     |
+-------------------+--------------------+------------------------+------------------------+
| :math:`\bar{a}`   | :code:`\\bar{a}`   | :math:`\\widetilde{A}` | :code:`\\widetilde{A}` |
+-------------------+--------------------+------------------------+------------------------+
| :math:`\check{a}` | :code:`\\check{a}` | :math:`\\tilde{a}`     | :code:`\\tilde{a}`     |
+-------------------+--------------------+------------------------+------------------------+
| :math:`\dot{a}`   | :code:`\\dot{a}`   | :math:`\\ddot{a}`      | :code:`\\ddot{a}`      |
+-------------------+--------------------+------------------------+------------------------+
| :math:`\vec{a}`   | :code:`\\vec{a}`   | :math:`\\widehat{A}`   | :code:`\\widehat{A}`   |
+-------------------+--------------------+------------------------+------------------------+





多栏文档
========

可以使用multicol宏包来实现多栏文档。在导言区加入以下语句：

.. code-block:: latex

	\usepackage{multicol}
	\setlength{\columnsep}{1cm}  % 设置栏间距
	\setlength{\columnseprule}{1pt}  % 添加垂直分隔线
	\def\columnseprulecolor{\color{blue}}  % 设置颜色


在正文部分，使用multicols环境来进行分栏。例如

.. code-block:: latex

	\begin{multicols}{2}
	[
	\section{First Section}
	开头跨栏引文总结文段。该跨栏引文放在中括号内。
	]
	正文部分放在中括号后
	\end{multicols}


:code:`\\columnbreak` 命令会插入一个列断点，断点之前的段落会均匀地填满可用的空间。




引用与注释
===========

超链接
------

需要在引言区加入以下语句：

.. code-block:: latex

	\usepackage{hyperref}
	\hypersetup{
	urlcolor=blue,  % 链接到网站的链接
	citecolor=blue,  % 引用符号的颜色
	linkcolor=blue,  % 内部链接交叉引用的颜色
	colorlinks=true, 
	}

在正文中，通过 :code:`\\url{http://www.overleaf.com}` 的形式来书写显式地址的链接，通过 :code:`\\href{http://www.overleaf.com}{Something Linky}` 来书写隐式地址的链接（第二个大括号内为文本显式内容）。


字体
======

要使用中文字体，需要使用 :code:`\\usepackage{ctex}` 宏包。部分生僻字无法显示时，可以考虑调用windows字体库，例如

.. code-block:: latex

	% 导言区写上
	\setCJKfamilyfont{adobesong}{Adobe Song Std}
	% 正文中使用
	{\CJKfamily{adobesong} 宬}

生僻字也可以通过“拼凑”的方法来实现显示，例如

.. code-block:: latex

	% 导言区写上
	\usepackage{graphicx}
	% 正文中使用
	\hbox{\lower-0.55ex\hbox{\kern+.0em\scalebox{0.95}[0.95]{宀}}\lower+0.15ex\hbox{\kern-0.90em \scalebox{0.8}[0.8]{成}}}


在Latex当中，粗体一般会使用下面的命令：

- :code:`\\textbf` ：文本环境加粗。在数学环境使用的话，会使斜体效果消失。并且无法输出加粗的希腊字母。
- :code:`\\mathbf` ：会变为粗体，但同样会导致数学字母斜体形式的丢失。
- :code:`\\boldmath` ：数学环境里可以加粗且不会使斜体消失。需要添加amsmath宏包。
- :code:`\\boldsymbol` ：可以对希腊字母加粗。需要添加amsmath宏包。
- :code:`\\bm` ：在数学环境中进行加粗。需要添加bm宏包。
  
但是在xelatex或Luatex引擎下使用了unicode-math宏包后，上述部分数学环境中使用的加粗手段会报错。此时，可以改用以下命令：

- :code:`\\symbfit` ：加粗，且有斜体效果。
- :code:`\\symbf` ：加粗，没有斜体效果。
- :code:`\\mathbfcal` ：加粗的mathcal字体。
  






颜色
=====

在引言区导入 :code:`\\usepackage{color, xcolor}` 。已经定义的颜色见 `https://www.overleaf.com/learn/latex/Using_colours_in_LaTeX <https://www.overleaf.com/learn/latex/Using_colours_in_LaTeX>`_ 


使用 :code:`\\definecolor` 来自定义颜色，例如

.. code-block:: latex

	\definecolor{cRed}{HTML}{FF0000}  % 颜色的16进制值
	\definecolor{cGreen}{RGB}{0,255,0}  % 通过RGB，取值为0~255
	\definecolor{cBlue}{rgb}{0,0,1}  % 通过rgb，取值为0~1

在正文部分通过 :code:`\\color{cRed}{使用自定义红色的文本}` 的形式来在正文中使用自定义颜色显示文本。




插入参考文献
=============

LaTeX使用bibtex管理文章的参考文献，文件格式为 :code:`.bib` ，一般可以通过谷歌学术直接复制所需文献的BibTex文本到自己的bib文件里。但是可能会存在部分文献的bib信息不完整，所以需要自行添加所需信息。

相关信息可以参考 `LaTeX参考文献类型 <https://blog.csdn.net/lly1122334/article/details/90106789>`_  和 `LaTeX中参考文献管理以及注意事项 <https://www.cnblogs.com/csucat/p/5142471.html>`_ 

BibTex的参考文献类型如下所示：

+----------------+------------------------------------------+-------------------------------------------------------+------------------------------------------------------------------------------+
| BibTex标记符号 | 文献类型                                 | 不可少域                                              | 可省略域                                                                     |
+================+==========================================+=======================================================+==============================================================================+
| @article       | 期刊文章                                 | author,title,journal,year                             | volume,number,pages,month,note                                               |
+----------------+------------------------------------------+-------------------------------------------------------+------------------------------------------------------------------------------+
| @book          | 有明确出版商的书                         | author或editor,title,publisher,year                   | volume或number,series,address,editon,month,note                              |
+----------------+------------------------------------------+-------------------------------------------------------+------------------------------------------------------------------------------+
| @booklet       | 没有指定出版商或赞助商的印刷品           | title                                                 | author,howpublished,address,month,year,note                                  |
+----------------+------------------------------------------+-------------------------------------------------------+------------------------------------------------------------------------------+
| @conference    | 会议文章，与inproceedings相同            | author,title,booktitle,year                           | editor,volume或number,series,pages,address,month,organization,publisher,note |
+----------------+------------------------------------------+-------------------------------------------------------+------------------------------------------------------------------------------+
| @inbook        | 书的一部分，可以是章节等                 | author或editor,title,chapter和/或pages,publisher,year | volume或number,series,type,address,edition,month,note                        |
+----------------+------------------------------------------+-------------------------------------------------------+------------------------------------------------------------------------------+
| @incollection  | 书的一部分，拥有其自己的标题             | author,title,booktitle,publisher,year                 | editor,volume或number,series,type,chapter,pages,address,edition,month,note   |
+----------------+------------------------------------------+-------------------------------------------------------+------------------------------------------------------------------------------+
| @inproceedings | 会议文章                                 | author,title,booktitle,year                           | editor,volume或number,series,pages,address,month,organization,publisher,note |
+----------------+------------------------------------------+-------------------------------------------------------+------------------------------------------------------------------------------+
| @manual        | 技术文档                                 | title                                                 | author,organization,address,edition,month,year,note                          |
+----------------+------------------------------------------+-------------------------------------------------------+------------------------------------------------------------------------------+
| @mastersthesis | 硕士论文                                 | author,title,school,year                              | type,address,month,note                                                      |
+----------------+------------------------------------------+-------------------------------------------------------+------------------------------------------------------------------------------+
| @phdthesis     | 博士论文                                 | author,title,school,year                              | type,address,month,note                                                      |
+----------------+------------------------------------------+-------------------------------------------------------+------------------------------------------------------------------------------+
| @proceedings   | 会议记录                                 | title,year                                            | editor,volume或number,series,address,month,organization,publisher,note       |
+----------------+------------------------------------------+-------------------------------------------------------+------------------------------------------------------------------------------+
| @techreport    | 由学校或其他机构出版的报告，通常含编号   | author,title,institution,year                         | type,number,address,month,note                                               |
+----------------+------------------------------------------+-------------------------------------------------------+------------------------------------------------------------------------------+
| @unpublished   | 有作者和标题但未正式出版的文件           | author,title,note                                     | month,year                                                                   |
+----------------+------------------------------------------+-------------------------------------------------------+------------------------------------------------------------------------------+
| @misc          | 大杂烩，当没有其他适合的时候使用这个类型 | 无                                                    | author,title,howpublished,month,year,note                                    |
+----------------+------------------------------------------+-------------------------------------------------------+------------------------------------------------------------------------------+



特别地还有 :code:`@online` 类型，可以参考下面的方式来制作bib文件信息：

.. code-block:: latex

	@online{thuthesis,
	  author          = {薛瑞尼},
	  title           = {ThuThesis: 清华大学学位论文模板},
	  urldate         = {2019-04-27},
	  url             = {https://github.com/xueruini/thuthesis},
	  year            = 2017,
	}

