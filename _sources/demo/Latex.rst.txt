*****
Latex
*****

图片排版
========

需要在导言区导入以下宏包：

.. code-block:: latex

    \usepackage{graphicx, subfigure, float, caption}


一般的图片插入格式为

.. code-block:: latex

	\begin{figure}[H]
	\centering
	\includegraphics[scale=0.2]{图片名字}
	\caption{图例信息}
	\label{fig:引用标签}
	\end{figure}

其中图片放置位置的选项有[htbp]或[H]，各选项的含义为

- :code:`h` ：当前位置。将图形放置在正文文本中给出该图形环境的地方。如果本页所剩的页面不够，这一参数将不起作用。
- :code:`t` ：顶部。将图形放置在页面的顶部。
- :code:`b` ：底部。将图形放置在页面的底部。
- :code:`p` ：浮动页。将图形放置在一只允许有浮动对象的页面上。
- :code:`H` ：float宏包下设置为当前位置，若放不下需要手工调整。


并排插入图片
------------

借助minipage来实现并排插入多张图片。下面是一个并排插入两张图片示例：

.. code-block:: latex

	\begin{figure}[H]
	\centering
	\begin{minipage}{0.45\linewidth}
	    \centering
	    \includegraphics[width=0.9\linewidth]{1}
	    \caption{1}
	    \label{fig:1}
	\end{minipage}
	\begin{minipage}{0.45\linewidth}
	    \centering
	    \includegraphics[width=0.9\linewidth]{2}
	    \caption{2}
	    \label{fig:2}
	\end{minipage}
	\end{figure}

如果希望插入更多张图片，只需要调整minipage的宽度，让一行能够放下对应的minipage数量即可。同时，可以在minipage之间添加 :code:`\\quad` 来使图片之间拉开一定间距。

如果需要插入多行图片，则是需要让两行minipage之间空出一行来换行即可。


并排插入子图片
--------------

如果需要插入多张子图片并显示为一横排，使用 :code:`\\subfigure` 和minipage来实现。下面是一个示例：

.. code-block:: latex

	\begin{figure}[H]
	\centering
	\subfigure{
	\begin{minipage}[b]{0.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{图片名1}
	\end{minipage}
	}
	\subfigure{
	\begin{minipage}[b]{0.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{图片名2}
	\end{minipage}
	}
	\subfigure{
	\begin{minipage}[b]{0.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{图片名3}
	\end{minipage}
	}
	\caption{figure title}
	\label{fig:main}
	\end{figure}


如果需要为每张图片添加单独的序号，则只需要在 :code:`\\subfigure` 后加一对方括号[]即可。如果需要进一步为每张图片添加单独的描述信息，则在 :code:`\\subfigure` 后的那一对方括号[]内填写描述信息即可。


多行多列排版子图片
------------------

与并排插入图片类似，简单地叠加 :code:`\\subfigure` 即可，通过控制minipage的宽度来控制一行插入的图片数量，空行来实现换行（或者由minipage宽度限制来自动换行）。

如果要实现子图片分组共用一个子标题，那么可以在同一个 :code:`\\subfigure` 内放入多个minipage。下面是一个示例：

.. code-block:: latex

	\begin{figure}[H]
	\centering
	\subfigure[figure 1]{
	\begin{minipage}[b]{.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{girl.eps}
	\end{minipage}
	\begin{minipage}[b]{.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{girl.eps}
	\end{minipage}
	\begin{minipage}[b]{.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{girl.eps}
	\end{minipage}
	}
	\subfigure[figure 2]{
	\begin{minipage}[b]{.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{girl.eps}
	\end{minipage}
	\begin{minipage}[b]{.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{girl.eps}
	\end{minipage}
	\begin{minipage}[b]{.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{girl.eps}
	\end{minipage}
	}
	\caption{figure title}
	\end{figure}


如果想实现竖排的分组，那么可以通过对 :code:`\\includegraphics` 进行换行 :code:`\\\\` 操作来实现。下面是一个示例：

.. code-block:: latex

	\begin{figure}[H]
	\centering
	\subfigure[figure 1]{
	\begin{minipage}[b]{.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{girl.eps} \\
	    \includegraphics[scale=0.1]{girl.eps}
	\end{minipage}
	}
	\subfigure[figure 2]{
	\begin{minipage}[b]{.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{girl.eps} \\
	    \includegraphics[scale=0.1]{girl.eps}
	\end{minipage}
	}
	\subfigure[figure 3]{
	\begin{minipage}[b]{.3\linewidth}
	    \centering
	    \includegraphics[scale=0.1]{girl.eps} \\
	    \includegraphics[scale=0.1]{girl.eps}
	\end{minipage}
	}
	\caption{figure title}
	\end{figure}



跨栏放置图片
------------

在文章排版为双栏时，如果需要跨栏放置图片，只需要在 :code:`\\begin{figure}` 和 :code:`\\end{figure}` 上带星号 :code:`*` 即可。


图片标题设置
-------------

如果模板生成出来的图片标题格式为 :code:`Figure. 1` 而需要的格式为 :code:`Fig. 1` ，那么在导言区引入宏包 :code:`\\usepackage{caption}` ，然后在 :code:`\\begin{document}` 后面加上以下语句：

.. code-block:: latex

    \captionsetup[figure]{labelfont={bf}, name={Fig.}, labelsep=period}



表格排版
========

表格标题设置
-------------

如果模板生成出来的图片标题格式为 :code:`Tab. 1` 而需要的格式为 :code:`Table 1` ，那么在导言区引入宏包 :code:`\\usepackage{caption}` ，然后在 :code:`\begin{document}` 后面加上以下语句：

.. code-block:: latex

    \captionsetup[table]{labelfont={bf}, name={Table}, labelsep=period}


将Python的DataFrame打印为LaTeX三线表
-------------------------------------

下面的Python代码函数能够将DataFrame打印为一般的三线表。要求DataFrame包含columns且不含index。

.. code-block:: python

	def print_table(df):
	    rows = df.shape[0]
	    cols = df.shape[1]
	    header = '\\begin{table}[H]\n\\centering\n\\caption{1}\n\\begin{tabular}{%s}\n\\toprule' % ('c' * cols)
	    ender = '\\bottomrule\n\\end{tabular}\n\\end{table}'

	    print(header)
	    colsList = list(df.columns)
	    colHeader = ''
	    for i in range(0, cols):
	        if i == cols - 1:
	            colHeader += colsList[i] + ' \\\\'
	        else:
	            colHeader += colsList[i] + ' & '
	    print(colHeader + '\n' + '\\hline')
	    line = ''
	    for i in range(0, rows):
	        for j in range(0, cols):
	            if j == cols - 1 and i != rows - 1:
	                line += str(df.iloc[i, j]) + ' \\\\\n'
	            elif j == cols - 1 and i == rows - 1:
	                line += str(df.iloc[i, j]) + ' \\\\'
	            else:
	                line += str(df.iloc[i, j]) + ' & '
	    print(line)
	    print(ender)
	    return 0


特殊物理单位
============

在导言区引入 :code:`\\usepackage{siunitx}` 。

“埃”：首先需要在导言区写入 :code:`\\DeclareSIUnit\angstrom{Å}` ，之后在正文处通过 :code:`\\si{\angstrom}` 来书写该单位。

“摄氏度”：在正文处通过 :code:`\\si{\degreeCelsius}` 来书写该单位。




特殊数学符号
=============

在导言区引入如下宏包：

.. code-block:: latex

    \usepackage{amsmath, amsthm, amssymb, bm, graphicx, hyperref, mathrsfs, fancyhdr, physics}

“闭曲面积分”：需要在导言区额外引入 :code:`\\usepackage{esint}` ，然后在正文处通过 :code:`\\varoiint` 来书写该符号。

“二重极限（多行下标）”：使用 :code:`\\substack` 来实现，例如 :code:`\\lim_{\substack{x \\to + \\infty \\\\ y \\to + \\infty}}` 。

“等号上下文字”：需要在导言区额外引入 :code:`\\usepackage{extpfeil}` 或 :code:`\\usepackage{extarrows}` ，之后通过 :code:`\\xlongequal[等号下文字]{等号上文字}` 的方式来书写。如果只是在普通等号的上面加少量符号，则可以使用 :code:`\\usepackage{amsmath}` 中的 :code:`\\overset{等号上符号}{=}` 来书写。







多栏文档
========

可以使用multicol宏包来实现多栏文档。在导言区加入以下语句：

.. code-block:: latex

	\usepackage{multicol}
	\setlength{\columnsep}{1cm}  % 设置栏间距
	\setlength{\columnseprule}{1pt}  % 添加垂直分隔线
	\def\columnseprulecolor{\color{blue}}  % 设置颜色


在正文部分，使用multicols环境来进行分栏。例如

.. code-block:: latex

	\begin{multicols}{2}
	[
	\section{First Section}
	开头跨栏引文总结文段。该跨栏引文放在中括号内。
	]
	正文部分放在中括号后
	\end{multicols}


:code:`\\columnbreak` 命令会插入一个列断点，断点之前的段落会均匀地填满可用的空间。




引用与注释
===========

超链接
------

需要在引言区加入以下语句：

.. code-block:: latex

	\usepackage{hyperref}
	\hypersetup{
	urlcolor=blue,  % 链接到网站的链接
	citecolor=blue,  % 引用符号的颜色
	linkcolor=blue,  % 内部链接交叉引用的颜色
	colorlinks=true, 
	}

在正文中，通过 :code:`\\url{http://www.overleaf.com}` 的形式来书写显式地址的链接，通过 :code:`\\href{http://www.overleaf.com}{Something Linky}` 来书写隐式地址的链接（第二个大括号内为文本显式内容）。




颜色
=====

在引言区导入 :code:`\\usepackage{color, xcolor}` 。已经定义的颜色见 `https://www.overleaf.com/learn/latex/Using_colours_in_LaTeX <https://www.overleaf.com/learn/latex/Using_colours_in_LaTeX>`_ 


使用 :code:`\\definecolor` 来自定义颜色，例如

.. code-block:: latex

	\definecolor{cRed}{HTML}{FF0000}  % 颜色的16进制值
	\definecolor{cGreen}{RGB}{0,255,0}  % 通过RGB，取值为0~255
	\definecolor{cBlue}{rgb}{0,0,1}  % 通过rgb，取值为0~1

在正文部分通过 :code:`\\color{cRed}{使用自定义红色的文本}` 的形式来在正文中使用自定义颜色显示文本。

